name: CI

on:
  pull_request:
  push:
    branches:
      - clean-main
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: 🔽️ Checkout do Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🤖 Instalar dependências de lint
        run: pip install ruff bandit

      - name: 🤜 Rodar Ruff
        run: ruff check .

      - name: 🐝 Rodar Bandit
        run: bandit -r .

      - name: ✅ Validar descrição do PR
        if: github.event_name == 'pull_request'
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: python ci/validate_pr_description.py

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: 🔽️ Checkout do Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🤖 Instalar dependências de teste
        run: |
          pip install -r bot_keydrop/requirements.txt
          pip install -r bot_keydrop/backend/requirements.txt || true
          pip install -r requirements-dev.txt
          pip install firebase_admin discord-webhook || true
          pip install pytest

      - name: 📚 Rodar pytest
        run: pytest

  ui_pipeline:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 🔽️ Checkout do Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📄 Verificar histórico de decisões
        run: |
          if [ -f ci/check_history.py ]; then
            python ci/check_history.py
          else
            echo 'ci/check_history.py not found'
          fi

  staging:
    if: github.ref_name == 'main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: ui_pipeline
    steps:
      - name: 🔽️ Checkout do Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 🚀 Rodar pipeline de staging
        run: bash ci/run_staging_pipeline.sh
