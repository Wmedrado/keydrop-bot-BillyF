name: CI

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "⬇️ Checkout do Código"
        uses: actions/checkout@v4

      - name: "🚫 Verificar push direto na main"
        run: python ci/check_main_push.py

      - name: "🐍 Setup Python"
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: "🤖 Auto rebase de branches da IA"
        if: startsWith(github.ref_name, 'codex/') || startsWith(github.ref_name, 'bot/') || startsWith(github.head_ref, 'codex/') || startsWith(github.head_ref, 'bot/')
        run: python ci/pre_pr_rebase.py

      - name: "📦 Instalar dependências de lint"
        run: pip install ruff bandit

      - name: "🧹 Executar Ruff e Bandit"
        run: |
          ruff check .
          bandit -r .

      - name: "📊 SonarCloud Scan"
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectKey: keydrop-bot
          organization: your-org
          args: >-
            -Dsonar.qualitygate.wait=true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: keydrop-bot
          SONAR_ORGANIZATION: your-org

      - name: "🧪 Rodar pipeline de testes"
        run: bash ci/run_pipeline.sh

      - name: "📜 Verificar histórico de decisões"
        run: python ci/check_history.py

      - name: "🧪 Rodar pipeline da interface gráfica"
        run: bash ci/run_ui_pipeline.sh

  staging:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: "⬇️ Checkout do Código"
        uses: actions/checkout@v4

      - name: "🚀 Rodar pipeline de staging"
        run: bash ci/run_staging_pipeline.sh
